generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String?
  google    Google?
  github    GitHub?
  projects  Project[]
  createdAt DateTime  @default(now())
}

model Google {
  id        Int      @id @default(autoincrement())
  googleId  String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
}

model GitHub {
  id        Int      @id @default(autoincrement())
  githubId  Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  apiUrl    String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  logs      Log[]
  createdAt DateTime @default(now())
}

model Log {
  id              Int       @id @default(autoincrement())
  uuid            String    @unique @default(uuid())
  createdAt       DateTime  @default(now())
  date            String
  endpoint        String
  url             String?
  statusCode      Int
  userAgent       String?
  method          String
  requestTime     DateTime
  responseTime    DateTime?
  elapsedDuration Int?
  clientIp        String?
  city            String?
  stateOrRegion   String?
  country         String?
  os              String?
  device          String?
  deviceType      String?
  browser         String?
  requestHeaders  String
  responseBody    String?
  project         Project   @relation(fields: [projectId], references: [id])
  projectId       Int
}

model APiKey {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  projectId Int
  createdAt DateTime @default(now())
}

model RefreshToken {
  id         Int      @id @default(autoincrement())
  token      String   @db.Text
  expires_in DateTime
  userId     Int      @unique
  createdAt  DateTime @default(now())
}
